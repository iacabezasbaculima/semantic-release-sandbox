name: Release

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: Whether to run semantic-release in `dry-run` mode
        type: boolean
        required: true
        default: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    env:
      DEBUG: semantic-release:*
    steps:
      - name: Checkout
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
        with:
          persist-credentials: false
          fetch-depth: 0
      
#      Uncomment when not using github action to run semantic-release
      # - name: Setup Node
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: '>=20'

      - name: Node version
        run: node --version

      - name: Release
        id: release
        uses: cycjimmy/semantic-release-action@cb425203a562475bca039ba4dbf90c7f9ac790f4 # v4.1.0
        with:
          semantic_version: 23.0.2
          dry_run: ${{ inputs.dry_run }}
          extra_plugins: |
            @semantic-release/changelog@6.0.3
            @semantic-release/git@10.0.1
            conventional-changelog-conventionalcommits@7.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_PAT }}

      - name: Update major version tag
        run: |
          cat "$GITHUB_OUTPUT"
          echo "head: ${{ steps.release.outputs.new_release_git_head}}"
          echo "tag: ${{ steps.release.outputs.new_release_git_tag}}"
          echo "channel: ${{ steps.release.outputs.new_release_channel}}"
          echo "published: ${{ steps.release.outputs.new_release_published}}"
          echo "version: ${{ steps.release.outputs.new_release_version}}"
          echo "M: ${{ steps.release.outputs.new_release_major_version}}"
          echo "m: ${{ steps.release.outputs.new_release_minor_version}}"
          echo "p: ${{ steps.release.outputs.new_release_patch_version}}"
          echo "last head: ${{ steps.release.outputs.last_release_git_head}}"
          echo "last tag: ${{ steps.release.outputs.last_release_git_tag}}"
          echo "last version: ${{ steps.release.outputs.last_release_version}}"
          #git tag --delete
          #git push origin --delete ${TAG}
